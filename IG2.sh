#!/bin/bash	

url=$1
admin=$2
if [ ! -d "$url" ];then
	mkdir $url
fi
if [ ! -d "$url/recon" ];then
	mkdir $url/recon
fi
#    if [ ! -d '$url/recon/eyewitness' ];then
#        mkdir $url/recon/eyewitness
#    fi
if [ ! -d "$url/recon/scans" ];then
	mkdir $url/recon/scans
fi

dirb http://$url /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -X .php,.html,.js,.css,.py,.jpg -o $url/recon/scans/directory_result.txt

nikto -url http://$url -o $url/recon/scans/nikto_result.html 

nmap -T4 -A $url -p- --script vulners.nse -oA $url/recon/scans/nmap_result

./nmap-parse-output/nmap-parse-output $url/recon/scans/nmap_result.xml http-ports > $url/recon/scans/report.txt

xmllint 10.0.2.15/recon/scans/nmap_result.xml --xpath "//elem[@key='id' and ../elem/text()='cve']/text()" > cve.txt

cve_length=$(wc -l < cve.txt)

if [ $cve_length -gt 0 ]
then
	input="cve.txt"
	echo "0" >> FINAL.txt
	while read -r line
	do
  		curl https://olbat.github.io/nvdcve/$line.json -H "Accept: application/json" > $line.json
		cvss=$(jq .impact.baseMetricV2.cvssV2.baseScore $line.json)
		publish_date=$(jq .publishedDate $line.json | cut -c2-11)
		exploit_date=$(cve_searchsploit $line | grep "Date" | cut -c8-17)
		echo "$cvss $publish_date $exploit_date" >> FINAL.txt
		rm $line.json
	done < "$input"
fi

rm cve.txt

# curl -s -D- https://paypal.com | grep strict > hsts.txt
# h8mail -t $admin -c h8mail_config.ini > breach.txt