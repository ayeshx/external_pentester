///////////////////////////////////////////////////////////////////////
////                        IMPORTS                                ////
///////////////////////////////////////////////////////////////////////

const dotenv = require('dotenv');
const fs = require('fs');
const word2pdf = require('word2pdf');
const express = require('express');
const cors = require('cors');
var glob = require("glob");
var app = express();
var readline = require('readline');
var HTMLParser = require('node-html-parser');
const docx = require("docx");
const { Paragraph, HeadingLevel, ImageRun, TextRun, Document, Packer } = require('docx');
var req_type = 'http';

////////////////////////////////////////////////////////////////////////
////                        CONFIG                                  ////    
////////////////////////////////////////////////////////////////////////

//To use cors
app.use(cors());
const execSync = require('child_process').execSync;

//to use environment variables from .env file
// dotenv.config();
// console.log(process.env.USER_SSH);
// var SCRIPT_ARGS = `userdb=${process.env.USER_LIST},passdb=${process.env.SHORT_P}`
// console.log(SCRIPT_ARGS);

var target = "192.168.1.1";
var company;
var company_domain, admin_email;

function main(){
    console.log("Started IG.sh");
    var dir = new Date().toISOString() + '_Report';
    var filepath = dir + '_' + target;
    // execSync(`mkdir ${filepath}; mkdir ${filepath}/IG`);
    // const resu = execSync(`bash IG2.sh ${filepath}/IG/nmap_result ${filepath}/IG/dirb_result.txt`,{stdio: "ignore"});
    const resu = execSync(`bash IG2.sh ${target} ${admin_email}`,{stdio: "ignore"})
    

    const pythonProcess = execSync('python3 ML_script.py');
    console.log(pythonProcess.toString());
   
    const image = new ImageRun({
        data: fs.readFileSync("/home/anathema/Desktop/cmkllogo.png"),
        transformation: {
            width: 400,
            height: 300,
        },
    });
    const doc = new docx.Document({
        creator: "CMKL",
        description: "Created by CMKL Security Research Team",
        title: "Report for ",
        sections: [{
            children: [
                new Paragraph({
                    children: [
                        image
                    ]
                }),
                new Paragraph(
                    {
                        text: company,
                        heading: HeadingLevel.TITLE
                    }
                ),
                new Paragraph(
                    {
                        text: "Security Assessment Findings Report",
                        heading: HeadingLevel.HEADING_1
                    }
                )
            ],
        }]
    });
    // console.log(doc);
    console.log(company);
    Packer.toBuffer(doc).then((buffer) => {
        fs.writeFileSync(`${company}.docx`, buffer);
    });

}

//GET route
app.get('/starttest/:domain/:ip/:company_name', (req, res) => {
    req_type = 'http';
    console.log('Received a request...');
    target = req.params.domain + "." + req.params.ip;
    console.log(req.params);
    company = req.params.company_name;
    company_domain = req.params.company_domain;
    admin_emaail = req.params.admin_email;
    console.log('Target IP:' + target);
    res.send("Done");
    main();
    
});

//START SERVER
app.listen(3005, () => {
    console.log('Server started...');
});